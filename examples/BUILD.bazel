load('//:rules.bzl','golang_template')

bazel_build_variable="a variable"

golang_template(
    name="literal-data-output",
    extension="txt",
    template="sample.tmpl.txt",
    literal_values={
        "sweaters": "15",
        "build_variable" : bazel_build_variable,
        "list" : "one",
    },
)

golang_template(
    name="file-data-output",
    extension="txt",
    template="sample.tmpl.txt",
    
    # Explicitly set map values from bazel context variables
    literal_values={
        "sweaters": "15",
        "build_variable" : bazel_build_variable,
        "list" : "one",
    },
    
    # Set the value of "script" to the contents of the file "script.txt"
    file_data_values = {
        "script" : ":script.txt"
    },

    # Set the value of "jsondata" to the json object parsed from the contents of jsondata.json 
    json_data_values = {
        "jsondata" : ":jsondata.json"
    }
)

sh_test(
    name = "test-file-data-output",
    size = "small",
    srcs = ["test-file-data-output.sh"],
    args = ["$(location :file-data-output.txt)"],
    data = [":file-data-output.txt"]
)
